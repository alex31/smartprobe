

             _______           _____                   
            |__   __|         |  __ \                  
               | |      ___   | |  | |    ___          
               | |     / _ \  | |  | |   / _ \         
               | |    | (_) | | |__| |  | (_) |        
               |_|     \___/  |_____/    \___/         


   ° fix
        * tester fix frozen
	* workerClass.hpp :
	  ø faire l'init en thread context (necessaire pour les event listener, mutex, ...)
	  ø run : remplacer while (true) {...}  par do {...} while (time != TIME_INFINITE)
	* remplacer les DebugTrace par des logError(severity, "string")
	* log de la revision de firmware sha git + date/time de compilation
	* remplacer le log de compteur par des données capteur
	* recoder la partie  FCNTL_WRITE de sdLog.c pour factoriser le code
	
	  
   ° écrire des modules

	* lecture fichier de conf
	* version qui envoie les données brutes sur la liaison série et la sdcard pour Murat
	* ahrs 2 angles (sans compas)
	* eigen ?
	* watchdog IWDG -> test au boot, si il y a eu hardfault -> log
	* recup de données gps -> ref horaire, calcul du cap, choix du format dans le fichier de conf :
	  ø nmea ou trame pprz (ou autre ?)
	* embarquer micro python pour coder du comportement via le fichier de conf sans avoir à reflasher ?





             _____     __  __    ___          
            |  __ \   |  \/  |  / _ \         
            | |  | |  | \  / | | |_| |        
            | |  | |  | |\/| | |  _  |        
            | |__| |  | |  | | | | | |        
            |_____/   |_|  |_| |_| |_|        
                    _                                                     
                   | |                                                    
             ___   | |_    _ __    ___    __ _   _ __ ___    ___          
            / __|  | __|  | '__|  / _ \  / _` | | '_ ` _ \  / __|         
            \__ \  \ |_   | |    |  __/ | (_| | | | | | | | \__ \         
            |___/   \__|  |_|     \___|  \__,_| |_| |_| |_| |___/         



#define STM32_ADC_ADC1_DMA_STREAM           STM32_DMA_STREAM_ID(2, 4)
#define STM32_SDC_SDMMC1_DMA_STREAM         STM32_DMA_STREAM_ID(2, 6)
#define STM32_SPI_SPI1_RX_DMA_STREAM        STM32_DMA_STREAM_ID(2, 0)
#define STM32_SPI_SPI1_TX_DMA_STREAM        STM32_DMA_STREAM_ID(2, 3)
#define STM32_I2C_I2C2_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 3)
#define STM32_I2C_I2C2_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 7)
#define STM32_I2C_I2C4_RX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 2)
#define STM32_I2C_I2C4_TX_DMA_STREAM        STM32_DMA_STREAM_ID(1, 5)

